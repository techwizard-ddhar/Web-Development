<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Application</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            height: 100vh;
            background-color: #f4f7f6;
        }

        h1 {
            text-align: center;
            color: #444;
            margin: 0;
            padding: 20px;
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        #chat-container {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            background-color: #ffffff;
            border-bottom: 1px solid #ddd;
            box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05);
        }

        #chat-container .message {
            margin-bottom: 15px;
            padding: 10px;
            border-radius: 10px;
            background-color: #e9f5f5;
            color: #333;
            max-width: 70%;
            word-wrap: break-word;
            font-size: 15px;
        }

        #input-container {
            display: flex;
            padding: 15px;
            background: #f8f9fa;
            border-top: 1px solid #ddd;
        }

        #input-container input {
            flex: 1;
            padding: 15px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 25px;
            outline: none;
            transition: border 0.3s;
        }

        #input-container input:focus {
            border-color: #007bff;
        }

        #input-container button {
            padding: 15px 20px;
            font-size: 16px;
            margin-left: 10px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #input-container button:hover {
            background-color: #0056b3;
        }

        /* Smooth scrollbar */
        #chat-container::-webkit-scrollbar {
            width: 8px;
        }

        #chat-container::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        #chat-container::-webkit-scrollbar-thumb {
            background: #ccc;
            border-radius: 10px;
        }

        #chat-container::-webkit-scrollbar-thumb:hover {
            background: #aaa;
        }
    </style>
</head>
<body>

    <h1>Chatting inside... <%= groupname %></h1>

    <div id="chat-container">
        <% for(let i = 0; i < previousMessage.length; i++) { %>
            <div class="message"><strong><%= previousMessage[i].sender %>:</strong> <%= previousMessage[i].content %></div>
        <% } %>        
    </div>

    <div id="input-container">
        <input id="message-input" type="text" placeholder="Type your message here..." />
        <button id="send-button">Send</button>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io(); // makes a connection to the server

        const chatContainer = document.getElementById('chat-container');
        const messageInput = document.getElementById('message-input');
        const sendButton = document.getElementById('send-button');

        // Join the room
        socket.emit('join_room', {
            roomid: '<%= roomid %>',
            user: '<%= user %>'
        });

        // Receive and display messages
        socket.on('msg received', (data) => {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            messageElement.innerHTML = `<strong>${data.sender}:</strong> ${data.message}`;
            chatContainer.appendChild(messageElement);
            chatContainer.scrollTop = chatContainer.scrollHeight;
        });

        // Send message to server
        sendButton.addEventListener('click', () => {
            const message = messageInput.value;
            if (message.trim() !== '') {
                socket.emit('chat_msg', {
                    roomid: '<%= roomid %>',
                    sender: '<%= user %>',
                    message: message
                });
                messageInput.value = '';
            }
        });

        // Allow pressing "Enter" to send a message
        messageInput.addEventListener('keypress', (event) => {
            if (event.key === 'Enter') {
                sendButton.click();
            }
        });
    </script>
</body>
</html>
